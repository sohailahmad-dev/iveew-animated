"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const api_1 = require("../api");
const base_command_1 = require("../base-command");
class Update extends base_command_1.BaseCommand {
    async run() {
        // Check we have all the information we need
        if (this.apiToken === undefined) {
            this.warn(`No API token found at ${this.configPath}. Using local copy of tracking plans instead.`);
        }
        if (this.workspaceConfig === undefined) {
            this.error(`No workspace config found at ${this.configPath}. Run init first to generate a configuration file.`);
        }
        const configPlans = this.workspaceConfig?.trackingPlans ?? [];
        if (configPlans.length === 0) {
            this.error(`No tracking plans found on ${this.configPath}. Run init first to generate a config file.`);
        }
        core_1.CliUx.ux.action.start('Loading tracking plans');
        const trackingPlans = await (0, api_1.loadTrackingPlans)(this.apiToken, this.configPath, this.workspaceConfig.trackingPlans, true);
        this.debug('Loaded Tracking Plans:\n', trackingPlans);
        core_1.CliUx.ux.action.stop(chalk_1.default.green(`Loaded`));
    }
}
exports.default = Update;
Update.description = 'Download the latest tracking plan data';
Update.aliases = ['u'];
Update.examples = ['<%= config.bin %> <%= command.id %>'];
